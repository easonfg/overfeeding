length(unique(cytof.names))
length(cytokines.data.names)
length(cytokines.names)
length(meta.names)
length(unique(meta.names))
unique(cytof.names)
length(cytokines.names)
length(unique(meta.names))
length(unique(cytof.names))
intersect(unique(cytof.names), meta.names)
length(intersect(unique(cytof.names), meta.names))
setdiff(unique(cytof.names), meta.names)
meta.names
meta.data
source('~/Desktop/overfeeding/sample_intersects.R')
meta.data$saccharin
meta.data$SUBJECT.ID
unique(meta.data$SUBJECT.ID)
length(cytokines.names)
length(cytokines.names)
cytokines.names
meta.names
uniuque(meta.names)
unique(meta.names)
cytokines.names
unique(cytof.names)
length(unique(cytof.names))
length(unique(meta.names))
length(intersect(unique(cytof.names), meta.names))
intersect(unique(cytof.names), cytokines.names)
dim(meta.data)
head(meta.data)
dim(meta.data)
length(cytokines.names)
cytokines.names
intersect(cytokines.names, meta.names)
cytokines.names
cytokines.data
grep('_FCH', colnames(cytokines.data))
length(grep('_FCH', colnames(cytokines.data)))
length(cytof.names)
length(unique(cytof.names))
head(cytof.names)
head(cytof.data)
cytof.data[1:10,1:10]
dim(cytof.data)
grep('Freq', colnames(cytof.data))
grep('Median', colnames(cytof.data))
cytof.data[,grep('Freq', colnames(cytof.data))]
dim(cytof.data[,grep('Freq', colnames(cytof.data))])
grep('Median', colnames(cytof.data))
length(grep('Median', colnames(cytof.data)))
cytof.data[,grep('Median', colnames(cytof.data))]
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
sspg
head(sspg)
sspg[1:10, 1:10]
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
source('~/Desktop/overfeeding/bmi/results/univariate_csv/univariate_intersect.R')
source('~/Desktop/overfeeding/bmi/results/glmnet_csv/glmnet_intersect.R')
source('~/Desktop/overfeeding/bmi/results/glmnet_csv/glmnet_intersect.R')
dim(kip.cytokines)
kip.cytokines
kip.cytokines = read.csv('Re__Obesity_data_set/full_1KIP.csv', row.names = 1)
dim(kip.cytokines)
kip.cytokines[1:10,1:10]
colnames(kip.cytokines)[54]
colnames(kip.cytokines)[53]
length(c(1,2,3, 8:53))
224-49
bmi_all[1:10,1:10]
dim(bmi_all)
source('~/Desktop/overfeeding/bmi/results/univariate_csv/univariate_intersect.R')
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
sspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
# sspg = sspg %>% data.frame()%>% select(c(1,4,5, grep('_FCH', colnames(sspg))))
head(sspg)
pipe(sspg, 'percdeltaSSPG', c('Sexismale', 'Age'), 'sspg')
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
sspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
# sspg = sspg %>% data.frame()%>% select(c(1,4,5, grep('_FCH', colnames(sspg))))
head(sspg)
pipe(sspg, 'percdeltaSSPG', c(), 'sspg')
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
sspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
# sspg = sspg %>% data.frame()%>% select(c(1,4,5, grep('_FCH', colnames(sspg))))
head(sspg)
pipe(sspg, 'percdeltaSSPG', c('Sexismale', 'Age'), 'sspg')
debugSource('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
sig.genes
lin.f.stat.p.val.coeff
lin.f.stat.p.val.coeff[sapply(lin.f.stat.p.val.coeff, function(x) !is.null(x))]
data.frame(t(lin.f.stat.p.val.coeff))
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
Q
Q
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
sspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
pipe(sspg, 'percdeltaSSPG', 'sspg')
pipe(sspg, 'percdeltaSSPG', c(), 'sspg')
source('~/Desktop/overfeeding/bmi/results/univariate_csv/univariate_intersect.R')
source('~/Desktop/overfeeding/bmi/results/glmnet_csv/glmnet_intersect.R')
source('~/Desktop/overfeeding/bmi/results/univariate_csv/univariate_intersect.R')
debugSource('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
sig.genes
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
# sspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
sspg = sspg %>% data.frame()%>% select(c(1,3,4,5, grep('_FCH', colnames(sspg))))
# sspg = sspg %>% data.frame()%>% select(c(1,4,5, grep('_FCH', colnames(sspg))))
head(sspg)
sspg[1:10,1:10]
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
# sspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
sspg = sspg %>% data.frame()%>% select(c(1,3,4,5, grep('_FCH', colnames(sspg))))
# sspg = sspg %>% data.frame()%>% select(c(1,4,5, grep('_FCH', colnames(sspg))))
head(sspg)
sspg[1:10,1:10]
pipe(sspg, 'percdeltawt', c(), 'sspg')
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
debugSource('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
sig.genes
sig.genes
Q
# pipe(sspg, 'percdeltaSSPG', c('Sexismale', 'Age'), 'sspg')
# pipe(sspg, 'percdeltaSSPG', c(), 'sspg')
# pipe(sspg, 'percdeltawt', c(), 'sspg')
pipe(sspg, 'percdeltawt', c('Sexismale', 'Age'), 'sspg')
sig.genes
source('~/Desktop/overfeeding/bmi/results/univariate_csv/univariate_intersect.R')
source('~/Desktop/overfeeding/bmi/results/glmnet_csv/glmnet_intersect.R')
sspg
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
sspg
sspg = data.frame(sspg)
sspg
# bmi_all = read.csv('Re__Obesity_data_set_2/bmi_all.csv', row.names = 1)
# bmi_all = t(bmi_all)
# bmi_all = bmi_all %>% data.frame()%>% select(-c(3,5,6))
# bmi_all = bmi_all %>% select(-grep('^mod_', colnames(bmi_all)))
# pipe(bmi_all, 'BMI', c('Gender', 'Age', 'CMV', 'EBV'), 'bmi_all')
#
kip.cytokines = read.csv('Re__Obesity_data_set/full_1KIP.csv', row.names = 1)
sub.kip.cytokines = kip.cytokines %>% select(-c(1,2,3, 8:53))
sub.kip.cytokines
pc.res = prcomp(sub.kip.cytokines, scale = T)
sub.kip.cytokines
head(sub.kip.cytokines)
pca.data = sub.kip.cytokines
strsplit(rownames(pca.data), '_')
strsplit(rownames(pca.data), '_')[[1]]
strsplit(rownames(pca.data), '_')[1]
sapply(rownames(pca.data) function(x) strsplit(x, '_')[[1]][1])
sapply(rownames(pca.data), function(x) strsplit(x, '_')[[1]][1])
head(pca.data)
pc.res = prcomp(pca.data[,5:ncol(pca.data)], scale = T)
fviz_pca_ind(pca.res,
col.ind = pca.data$rownames,
repel = TRUE     # Avoid text overlapping
)
pc.res = prcomp(pca.data[,5:ncol(pca.data)], scale = T)
dim(sapply(rownames(pca.data), function(x) strsplit(x, '_')[[1]][1]))
dim(pc.res)
prcomp(pca.data[,5:ncol(pca.data)], scale = T)
pc.res = prcomp(pca.data[,5:ncol(pca.data)], scale = T)
pc.res
fviz_pca_ind(pca.res,
col.ind = pca.data$rownames,
repel = TRUE     # Avoid text overlapping
)
pca.data = sub.kip.cytokines
pca.data$rownames = sapply(rownames(pca.data), function(x) strsplit(x, '_')[[1]][1])
pc.res = prcomp(pca.data[,5:(ncol(pca.data)-1)], scale = T)
fviz_pca_ind(pca.res,
col.ind = pca.data$rownames,
repel = TRUE     # Avoid text overlapping
)
fviz_pca_ind(pca.res,
# col.ind = pca.data$rownames,
repel = TRUE     # Avoid text overlapping
)
pca.data$rownames
pca.data = sub.kip.cytokines
pca.data$rownames = sapply(rownames(pca.data), function(x) strsplit(x, '_')[[1]][1])
pca.data$rownames = sapply(pca.data$rownames, function(x) strsplit(x, '0')[[1]][1])
pca.data$rownames
pc.res = prcomp(pca.data[,5:(ncol(pca.data)-1)], scale = T)
fviz_pca_ind(pca.res,
# col.ind = pca.data$rownames,
repel = TRUE     # Avoid text overlapping
)
fviz_pca_ind(pca.res,
col.ind = pca.data$rownames,
repel = TRUE     # Avoid text overlapping
)
pca.data
pc.res
head(pc.res)
fviz_pca_ind(pca.res,
col.ind = pca.data$rownames,
repel = TRUE     # Avoid text overlapping
)
dim(pca.data)
dim(pc.res)
dim(pc.res$x)
(pc.res$x)
fviz_pca_ind(pca.res,
col.ind = pca.data$rownames,
repel = TRUE     # Avoid text overlapping
)
fviz_pca_ind(pca.res,
col.ind = pca.data$rownames,
# repel = TRUE     # Avoid text overlapping
)
pca.data$rownames
length(pca.data$rownames)
dim(pca.data)
(pc.res$x)
dim(pca.data)
pca.data = sub.kip.cytokines
pca.data$rownames = sapply(rownames(pca.data), function(x) strsplit(x, '_')[[1]][1])
pca.data$rownames = sapply(pca.data$rownames, function(x) strsplit(x, '0')[[1]][1])
length(pca.data$rownames)
pc.res = prcomp(pca.data[,5:(ncol(pca.data)-1)], scale = T)
fviz_pca_ind(pca.res,
col.ind = pca.data$rownames,
# repel = TRUE     # Avoid text overlapping
)
pca.data = sub.kip.cytokines
pca.data$rnames = sapply(rownames(pca.data), function(x) strsplit(x, '_')[[1]][1])
pca.data$rnames = sapply(pca.data$rnames, function(x) strsplit(x, '0')[[1]][1])
length(pca.data$rnames)
pc.res = prcomp(pca.data[,5:(ncol(pca.data)-1)], scale = T)
fviz_pca_ind(pca.res,
col.ind = pca.data$rnames,
# repel = TRUE     # Avoid text overlapping
)
(pca.data$rnames)
pca.data$rnames
kip.cytokines = read.csv('Re__Obesity_data_set/full_1KIP.csv', row.names = 1)
sub.kip.cytokines = kip.cytokines %>% select(-c(1,2,3, 8:53))
sub.kip.cytokines
pca.data = sub.kip.cytokines
pca.data$rnames = sapply(rownames(pca.data), function(x) strsplit(x, '_')[[1]][1])
pca.data$rnames = sapply(pca.data$rnames, function(x) strsplit(x, '0')[[1]][1])
length(pca.data$rnames)
(pca.data$rnames)
pc.res = prcomp(pca.data[,5:(ncol(pca.data)-1)], scale = T)
fviz_pca_ind(pca.res,
col.ind = pca.data$rnames,
# repel = TRUE     # Avoid text overlapping
)
pca.data[,5]
colnames(pca.data)[5]
colnames(pca.data)[4]
pc.res = prcomp(pca.data[,5:(ncol(pca.data)-1)], scale = T)
fviz_pca_ind(pca.res,
col.ind = pca.data$rnames,
# repel = TRUE     # Avoid text overlapping
)
dim(pca.data)
(pc.res$x)
kip.cytokines = read.csv('Re__Obesity_data_set/full_1KIP.csv', row.names = 1)
sub.kip.cytokines = kip.cytokines %>% select(-c(1,2,3, 8:53))
sub.kip.cytokines = sub.kip.cytokines[grep('SLV', rownames(sub.kip.cytokines)),]
pipe(sub.kip.cytokines, 'BMI', c('CMV', 'GENDER', 'AGE'), '1kip.cytokines.SLV')
kip.cytokines = read.csv('Re__Obesity_data_set/full_1KIP.csv', row.names = 1)
sub.kip.cytokines = kip.cytokines %>% select(-c(1,2,3, 8:53))
sub.kip.cytokines = sub.kip.cytokines[grep('SLV', rownames(sub.kip.cytokines)),]
pipe(sub.kip.cytokines, 'BMI', c('CMV', 'GENDER', 'AGE'), '1kip.cytokines.SLV')
kip.cytokines = read.csv('Re__Obesity_data_set/full_1KIP.csv', row.names = 1)
sub.kip.cytokines = kip.cytokines %>% select(-c(1,2,3, 8:53))
sub.kip.cytokines = sub.kip.cytokines[grep('CFS', rownames(sub.kip.cytokines)),]
pipe(sub.kip.cytokines, 'BMI', c('CMV', 'GENDER', 'AGE'), '1kip.cytokines.CFS')
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
sspg
head(sspg)
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
head(sspg)
sspg_deltasspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
sspg_deltaweight = sspg %>% data.frame()%>% select(c(1,3,4,5, grep('_FCH', colnames(sspg))))
sspg_bmi = sspg %>% data.frame()%>% select(c(1,4,5, grep('_FCH', colnames(sspg))))
# head(sspg)
# sspg[1:10,1:10]
pipe(sspg_deltasspg, 'percdeltaSSPG', c('Sexismale', 'Age'), 'sspg_deltasspg')
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
head(sspg)
sspg_deltasspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
sspg_deltaweight = sspg %>% data.frame()%>% select(c(1,3,4,5, grep('_FCH', colnames(sspg))))
sspg_bmi = sspg %>% data.frame()%>% select(c(1,4,5, grep('_FCH', colnames(sspg))))
# head(sspg)
# sspg[1:10,1:10]
pipe(sspg_deltasspg, 'percdeltaSSPG', c('Sexismale', 'Age'), 'sspg_deltasspg')
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
head(sspg)
sspg_deltasspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
sspg_deltaweight = sspg %>% data.frame()%>% select(c(1,3,4,5, grep('_FCH', colnames(sspg))))
sspg_bmi = sspg %>% data.frame()%>% select(c(1,4,5, grep('_FCH', colnames(sspg))))
# head(sspg)
# sspg[1:10,1:10]
pipe(sspg_deltasspg, 'percdeltaSSPG', c('Sexismale', 'Age'), 'sspg_deltasspg')
library(dplyr)
library(ggplot2)
pipe = function(dataset, outcome, control_var, graph_title){
### univariate linear
lin.f.stat.p.val.coeff = sapply(colnames(dataset %>% select(-outcome)), function(x){
if (length(control_var > 0)){
uni.linear = lm(as.formula(paste0(outcome, ' ~ ', x, paste0('+', control_var, collapse = ''))), data = data.frame(scale(dataset)))
}else{
uni.linear = lm(as.formula(paste0(outcome, '~ ', x)), data = data.frame(scale(dataset)))
}
uni.sum.res = summary(uni.linear)
##check for  collinearity
if (length(uni.linear$coefficients) > 2){
if (car::vif(uni.linear)[1] > 2){
browser()
}
}
# browser()
f.stat.p.val = pf(uni.sum.res$fstatistic[1],uni.sum.res$fstatistic[2],uni.sum.res$fstatistic[3],lower.tail=FALSE)
if (f.stat.p.val < 0.05){
# browser()
return (c(f.stat.p.val = f.stat.p.val, coeff = uni.sum.res$coefficients[2,1],  coeff.p.val = uni.sum.res$coefficients[2,4]))
}
})
lin.f.stat.p.val.coeff
if (sum(sapply(lin.f.stat.p.val.coeff, function(x) is.null(x))) == 0){
sig.genes = data.frame(t(lin.f.stat.p.val.coeff))
}else{
sig.genes = lin.f.stat.p.val.coeff[sapply(lin.f.stat.p.val.coeff, function(x) !is.null(x))]
sig.genes = data.frame(t(as.data.frame(sig.genes)))
head(sig.genes)
}
## adjusted pvalues
sig.genes = sig.genes[order(sig.genes$coeff, decreasing = T), ]
sig.genes$fdr = p.adjust(sig.genes$f.stat.p.val.value, method = 'fdr')
sig.genes
## adjusted pvalues
##select significant ones
sig.genes = sig.genes[sig.genes$coeff.p.val < 0.05, ]
##select significant ones
## line graphs
sub_dataset = dataset[,c(outcome, rownames(sig.genes))]
sub_dataset
library(tidyr)
sub_dataset = gather(sub_dataset, genes, measurements, rownames(sig.genes))
ggplot(sub_dataset, aes(measurements, sub_dataset[,outcome])) +
geom_point() +
geom_smooth(method='lm') +
facet_grid(. ~ genes)
## line graphs
## dot plots
sig.genes$genes = factor(rownames(sig.genes), levels = c(rownames(sig.genes)))
jpeg(paste('bmi/results/dotplot/', graph_title, '.jpeg', sep = ''),
units="in", width=5, height=5, res=500)
gg.res = ggplot(sig.genes, aes(coeff, genes)) +
geom_point(aes(size = -log10(fdr), fill = coeff),
colour = 'black', shape = 21) +
scale_fill_gradient2(low = 'blue', mid = 'white', high = 'red') +
ylab('') + xlab('') +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 11)) +
labs(size = '-log10(FDR)', fill = 'Estimates') +
geom_vline(xintercept=c(0), linetype="dotted") +
ggtitle(graph_title)
print(gg.res)
dev.off()
## dot plots
## csv output
write.csv(sig.genes, paste('bmi/results/univariate_csv/', graph_title, '_univariate.csv', sep = ''))
## csv output
### univariate linear
#################### glmnet#########################################
library(glmnet)
cv <- cv.glmnet(as.matrix(scale(dataset %>% select(-c(outcome)))),
dataset[,outcome], nfolds = nrow(dataset))
summary(cv)
jpeg(paste('bmi/results/glmnet_cv/', graph_title, '.jpeg', sep = ''),
units="in", width=8, height=8, res=500)
plot(cv)
dev.off()
return_features = function(model, lambda){
coeff = coef(model, s = lambda)
top_features = data.frame(name = coeff@Dimnames[[1]][coeff@i + 1], coefficient = coeff@x)
top_features = top_features[order(top_features$coefficient),]
# print(top_features)
return(top_features)
}
min.coeff = return_features(cv, 'lambda.min')
return_features(cv, 'lambda.1se')
write.csv(min.coeff, paste('bmi/results/glmnet_csv/', graph_title, '_glmnet.csv', sep = ''))
}
sspg = read.csv('Re__Obesity_data_set_2/obesityData_luminexWithSSPG.csv', row.names = 1)
sspg = t(sspg)
head(sspg)
sspg_deltasspg = sspg %>% data.frame()%>% select(c(1,2,4,5, grep('_FCH', colnames(sspg))))
sspg_deltaweight = sspg %>% data.frame()%>% select(c(1,3,4,5, grep('_FCH', colnames(sspg))))
sspg_bmi = sspg %>% data.frame()%>% select(c(1,4,5, grep('_FCH', colnames(sspg))))
# head(sspg)
# sspg[1:10,1:10]
pipe(sspg_deltasspg, 'percdeltaSSPG', c('Sexismale', 'Age'), 'sspg_deltasspg')
debugSource('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
sig.genes[order(sig.genes$coeff, decreasing = T), ]
sig.genes
lin.f.stat.p.val.coeff
sapply(lin.f.stat.p.val.coeff, function(x) is.null(x))
sapply(lin.f.stat.p.val.coeff, function(x) is.null(x)) == FALSE
sum(sapply(lin.f.stat.p.val.coeff, function(x) is.null(x)) == FALSE)
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
source('~/Desktop/overfeeding/bmi/results/univariate_csv/univariate_intersect.R')
source('~/Desktop/overfeeding/bmi/results/univariate_csv/univariate_intersect.R')
kip.cytokines.CFS = read.csv('bmi/results/glmnet_csv/1kip.cytokines.CFS_glmnet.csv', row.names = 1)
kip.cytokines.SLV = read.csv('bmi/results/glmnet_csv/1kip.cytokines.SLV_glmnet.csv', row.names = 1)
# kip.cytokines = read.csv('bmi/results/glmnet_csv/1kip.cytokines_glmnet.csv', row.names = 1)
bmi.all = read.csv('bmi/results/glmnet_csv/bmi_all_glmnet.csv', row.names = 1)
# sspg = read.csv('bmi/results/glmnet_csv/sspg_glmnet.csv', row.names = 1)
sspg_bmi = read.csv('bmi/results/glmnet_csv/sspg_bmi_glmnet.csv', row.names = 1)
sspg_deltawt = read.csv('bmi/results/glmnet_csv/sspg_deltaweight_glmnet.csv', row.names = 1)
sspg_deltawt_controlled = read.csv('bmi/results/glmnet_csv/sspg_deltaweight_controlled_glmnet.csv', row.names = 1)
sspg_deltasspg = read.csv('bmi/results/glmnet_csv/sspgsspg_deltasspg_glmnet.csv', row.names = 1)
montoya = read.csv('bmi/results/glmnet_csv/montoya_glmnet.csv', row.names = 1)
sspg_bmi$genes = toupper(sub('_FCH', '', sspg_bmi$genes)) %>% sub('\\.', '', .)
sspg_deltawt$genes = toupper(sub('_FCH', '', sspg_deltawt$genes)) %>% sub('\\.', '', .)
kip.cytokines.CFS = read.csv('bmi/results/glmnet_csv/1kip.cytokines.CFS_glmnet.csv', row.names = 1)
kip.cytokines.SLV = read.csv('bmi/results/glmnet_csv/1kip.cytokines.SLV_glmnet.csv', row.names = 1)
# kip.cytokines = read.csv('bmi/results/glmnet_csv/1kip.cytokines_glmnet.csv', row.names = 1)
bmi.all = read.csv('bmi/results/glmnet_csv/bmi_all_glmnet.csv', row.names = 1)
# sspg = read.csv('bmi/results/glmnet_csv/sspg_glmnet.csv', row.names = 1)
sspg_bmi = read.csv('bmi/results/glmnet_csv/sspg_bmi_glmnet.csv', row.names = 1)
sspg_deltawt = read.csv('bmi/results/glmnet_csv/sspg_deltaweight_glmnet.csv', row.names = 1)
sspg_deltawt_controlled = read.csv('bmi/results/glmnet_csv/sspg_deltaweight_controlled_glmnet.csv', row.names = 1)
sspg_deltasspg = read.csv('bmi/results/glmnet_csv/sspgsspg_deltasspg_glmnet.csv', row.names = 1)
montoya = read.csv('bmi/results/glmnet_csv/montoya_glmnet.csv', row.names = 1)
sspg_bmi$name = toupper(sub('_FCH', '', sspg_bmi$name)) %>% sub('\\.', '', .)
sspg_deltawt$name = toupper(sub('_FCH', '', sspg_deltawt$name)) %>% sub('\\.', '', .)
sspg_deltawt_controlled$name = toupper(sub('_FCH', '', sspg_deltawt_controlled$name)) %>% sub('\\.', '', .)
sspg_deltasspg$name = toupper(sub('_FCH', '', sspg_deltasspg$name)) %>% sub('\\.', '', .)
bmi.all$name = bmi.all$name %>% toupper() %>% sub('\\.', '_', .)
kip.cytokines.CFS$name = kip.cytokines.CFS$name %>% toupper() %>% sub('\\.', '_', .)
kip.cytokines.SLV$name = kip.cytokines.SLV$name %>% toupper() %>% sub('\\.', '_', .)
kip.cytokines.CFS$dataset = rep('kip.cytokines.CFS', nrow(kip.cytokines.CFS))
kip.cytokines.SLV$dataset = rep('kip.cytokines.SLV', nrow(kip.cytokines.SLV))
bmi.all$dataset = rep('bmi.all', nrow(bmi.all))
sspg_bmi$dataset = rep('sspg_bmi', nrow(sspg_bmi))
sspg_deltawt$dataset = rep('sspg_deltawt', nrow(sspg_deltawt))
sspg_deltawt_controlled$dataset = rep('sspg_deltawt_controlled', nrow(sspg_deltawt_controlled))
sspg_deltasspg$dataset = rep('sspg_deltasspg', nrow(sspg_deltasspg))
montoya$dataset = rep('montoya', nrow(montoya))
all.cyto.data = bind_rows(kip.cytokines.CFS,kip.cytokines.SLV, bmi.all, sspg_bmi, sspg_deltawt, sspg_deltawt_controlled, sspg_deltasspg)
all.cyto.data
dim(all.cyto.data)
dim(kip.cytokines)
dim(bmi.all)
dim(sspg)
dim(montoya)
head(all.cyto.data)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
source('~/Desktop/overfeeding/bmi/results/glmnet_csv/glmnet_intersect.R')
source('~/.active-rstudio-document')
debugSource('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
graph_title
source('~/Desktop/overfeeding/bmi/bmi_pred_pipe.R')
all.cyto.data$dataset
sspg_deltawt_controlled
source('~/Desktop/overfeeding/bmi/results/glmnet_csv/glmnet_intersect.R')
source('~/Desktop/overfeeding/bmi/results/glmnet_csv/glmnet_intersect.R')
source('~/Desktop/overfeeding/bmi/results/univariate_csv/univariate_intersect.R')
# bmi_all = read.csv('Re__Obesity_data_set_2/bmi_all.csv', row.names = 1)
# bmi_all = t(bmi_all)
# bmi_all = bmi_all %>% data.frame()%>% select(-c(3,5,6))
# bmi_all = bmi_all %>% select(-grep('^mod_', colnames(bmi_all)))
# pipe(bmi_all, 'BMI', c('Gender', 'Age', 'CMV', 'EBV'), 'bmi_all')
#
# kip.cytokines = read.csv('Re__Obesity_data_set/full_1KIP.csv', row.names = 1)
# sub.kip.cytokines = kip.cytokines %>% select(-c(1,2,3, 8:53))
# pipe(sub.kip.cytokines, 'BMI', c('CMV', 'GENDER', 'AGE'), '1kip.cytokines')
#
kip.cytokines = read.csv('Re__Obesity_data_set/full_1KIP.csv', row.names = 1)
sub.kip.cytokines = kip.cytokines %>% select(-c(1,2,3, 8:53))
sub.kip.cytokines = sub.kip.cytokines[grep('SLV', rownames(sub.kip.cytokines)),]
dim(sub.kip.cytokines)
# pipe(sub.kip.cytokines, 'BMI', c('CMV', 'GENDER', 'AGE'), '1kip.cytokines.SLV')
#
kip.cytokines = read.csv('Re__Obesity_data_set/full_1KIP.csv', row.names = 1)
sub.kip.cytokines = kip.cytokines %>% select(-c(1,2,3, 8:53))
sub.kip.cytokines = sub.kip.cytokines[grep('CFS', rownames(sub.kip.cytokines)),]
dim(sub.kip.cytokines)
source('~/Desktop/overfeeding/bmi/results/glmnet_csv/glmnet_intersect.R')
source('~/Desktop/overfeeding/bmi/results/univariate_csv/univariate_intersect.R')
debugSource('~/Desktop/overfeeding/metabolomics_FC/volcano_plots.R')
